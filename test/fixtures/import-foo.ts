// This file has been automatically generated by capnp-es. 
import * as capnp from "capnp-es";
import { Baz } from "./import-bar.js";
export const _capnpFileId = BigInt("0xfc552bdafbb0b889");
export class Foo extends capnp.Struct {
    static readonly BAZ_CONST = capnp.readRawPointer(new Uint8Array([0x10, 0x02, 0x40, 0x01, 0x00, 0x00]).buffer);
    static readonly _capnp = { displayName: "Foo", id: "f92e265d07c50136", size: new capnp.ObjectSize(0, 1) };
    adoptBaz(value: capnp.Orphan<Baz>): void { capnp.Struct.adopt(value, capnp.Struct.getPointer(0, this)); }
    disownBaz(): capnp.Orphan<Baz> { return capnp.Struct.disown(this.getBaz()); }
    getBaz(): Baz { return capnp.Struct.getStruct(0, Baz, this); }
    hasBaz(): boolean { return !capnp.Struct.isNull(capnp.Struct.getPointer(0, this)); }
    initBaz(): Baz { return capnp.Struct.initStructAt(0, Baz, this); }
    setBaz(value: Baz): void { capnp.Struct.copyFrom(value, capnp.Struct.getPointer(0, this)); }
    toString(): string { return "Foo_" + super.toString(); }
}
